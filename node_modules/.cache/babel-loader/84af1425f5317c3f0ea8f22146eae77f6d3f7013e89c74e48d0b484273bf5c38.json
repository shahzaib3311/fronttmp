{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CheckoutPage=()=>{const[message,setMessage]=useState(\"\");const[redirect,setRedirect]=useState(\"\");const[loading,setLoading]=useState(false);const[orderProcessed,setOrderProcessed]=useState(false);const navigate=useNavigate();useEffect(()=>{const query=new URLSearchParams(window.location.search);const processOrder=async url=>{setLoading(true);try{const response=await axios.get(url,{withCredentials:true});if(response.status===200){setMessage(\"Order placed! You will receive an email confirmation.\");setRedirect(\"home\");}else{setMessage(\"An error occurred. Please try again.\");}}catch(error){setMessage(\"An error occurred. Please try again.\");console.error(error);}finally{setLoading(false);setOrderProcessed(true);}};if(!orderProcessed){if(query.get(\"success\")){const orderId=query.get(\"order_id\");if(orderId){processOrder(\"https://api.dripsaint.com/api/confirm_checkout/\".concat(orderId));}else{setRedirect(\"home\");}}if(query.get(\"cancel\")){const orderId=query.get(\"order_id\");if(orderId){processOrder(\"https://api.dripsaint.com/api/cancel_order/\".concat(orderId));}else{setMessage(\"Order canceled -- continue to shop around and checkout when you're ready.\");setRedirect(\"cart\");}}}},[navigate,orderProcessed]);const handleRedirect=()=>{if(redirect===\"home\"){setMessage(\"Order placed! You will receive an email confirmation.\");navigate(\"/\");}else if(redirect===\"cart\"){navigate(\"/cart\");}};return/*#__PURE__*/_jsx(_Fragment,{children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-white p-6 rounded-md\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})})}):message&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-20\",children:[/*#__PURE__*/_jsx(\"p\",{children:message}),redirect&&/*#__PURE__*/_jsx(\"button\",{onClick:handleRedirect,children:redirect===\"home\"?\"Go to Homepage\":\"Go to Cart\"})]})});};export default CheckoutPage;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CheckoutPage","message","setMessage","redirect","setRedirect","loading","setLoading","orderProcessed","setOrderProcessed","navigate","query","URLSearchParams","window","location","search","processOrder","url","response","get","withCredentials","status","error","console","orderId","concat","handleRedirect","children","className","onClick"],"sources":["/tmp/build_e49e86bd/src/pages/CheackoutPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst CheckoutPage = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [orderProcessed, setOrderProcessed] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const query = new URLSearchParams(window.location.search);\r\n\r\n    const processOrder = async (url) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(url, {\r\n          withCredentials: true,\r\n        });\r\n        if (response.status === 200) {\r\n          setMessage(\"Order placed! You will receive an email confirmation.\");\r\n          setRedirect(\"home\");\r\n        } else {\r\n          setMessage(\"An error occurred. Please try again.\");\r\n        }\r\n      } catch (error) {\r\n        setMessage(\"An error occurred. Please try again.\");\r\n        console.error(error);\r\n      } finally {\r\n        setLoading(false);\r\n        setOrderProcessed(true);\r\n      }\r\n    };\r\n\r\n    if (!orderProcessed) {\r\n      if (query.get(\"success\")) {\r\n        const orderId = query.get(\"order_id\");\r\n        if (orderId) {\r\n          processOrder(`https://api.dripsaint.com/api/confirm_checkout/${orderId}`);\r\n        } else {\r\n          setRedirect(\"home\");\r\n        }\r\n      }\r\n\r\n      if (query.get(\"cancel\")) {\r\n        const orderId = query.get(\"order_id\");\r\n        if (orderId) {\r\n          processOrder(`https://api.dripsaint.com/api/cancel_order/${orderId}`);\r\n        } else {\r\n          setMessage(\"Order canceled -- continue to shop around and checkout when you're ready.\");\r\n          setRedirect(\"cart\");\r\n        }\r\n      }\r\n    }\r\n  }, [navigate, orderProcessed]);\r\n\r\n  const handleRedirect = () => {\r\n    if (redirect === \"home\") {\r\n      setMessage(\"Order placed! You will receive an email confirmation.\");\r\n      navigate(\"/\");\r\n    } else if (redirect === \"cart\") {\r\n      navigate(\"/cart\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center\">\r\n          <div className=\"bg-white p-6 rounded-md\">\r\n            <p>Loading...</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        message && (\r\n          <div className=\"mt-20\">\r\n            <p>{message}</p>\r\n            {redirect && (\r\n              <button onClick={handleRedirect}>\r\n                {redirect === \"home\" ? \"Go to Homepage\" : \"Go to Cart\"}\r\n              </button>\r\n            )}\r\n          </div>\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}